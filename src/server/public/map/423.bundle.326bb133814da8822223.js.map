{"version":3,"file":"423.bundle.326bb133814da8822223.js","mappings":"iOASgBA,GAA2BC,EAAAA,EAAAA,OAAAA,EAAAA,EAAAA,SAAAA,EAAAA,EAAAA,OAAAA,EAAAA,EAAAA,MAoB3C,IAAMC,EAAe,SAAAC,GAEnBC,QAAQC,IAAR,iBAA6BC,KAAKC,UAAUJ,IAC5C,IAoCA,GAAmCK,EAAAA,EAAAA,eAASC,GAArCC,EAAP,KAAkBC,EAAlB,KASA,OARAC,EAAAA,EAAAA,YAAU,6CACI,uBAAMC,IAAAA,IAAU,cAAhB,MAA4B,YAtE5C,IAAI,OAuEAF,EADY,EACMG,KAAKC,KAAI,SAAAC,GACzB,IAzDcC,EACdC,EACAC,EACAC,EACAC,EAqDMP,EAAOE,EAEb,OADAF,EAAKQ,MA1DSL,EA0DS,IAAIM,KAAKT,EAAKQ,MAxDrCH,EAAQ,KADRD,EAAI,IAAIK,KAAKN,IACGO,WAAa,GAC7BJ,EAAM,GAAKF,EAAEO,UACbJ,EAAOH,EAAEQ,cAETP,EAAMQ,OAAS,IACfR,EAAQ,IAAMA,GACdC,EAAIO,OAAS,IACbP,EAAM,IAAMA,GAET,CAACC,EAAMF,EAAOC,GAAKQ,KAAK,MAgDpBd,MA1ET,IAAM,SAAW,OAAO,QAsEgB,QAMxC,IAGE,mBAAC,IAAD,CAAQe,MAAO,CAAEC,UAAW,UAC1B,mBAAC9B,EAAD,CAAS6B,MAAO,CAAEE,OAAQ,WACxB,mBAAC,IAAD,CAAiBF,MAAO,CAAEG,SAAU,OAAQC,MAAO,UACnD,0BAAKC,UAAU,uBACdxB,GAAc,mBAAC,IAAD,CAAOyB,QAnDd,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,IAAK,QAEP,CACEF,MAAO,OACPC,UAAW,YACXC,IAAK,aAEP,CACEF,MAAO,MACPC,UAAW,MACXC,IAAK,OAEP,CACEF,MAAO,aACPC,UAAW,YACXC,IAAK,aAEP,CACEF,MAAO,QACPC,UAAW,QACXC,IAAK,SAEP,CACEF,MAAO,QACPC,UAAW,QACXC,IAAK,UAsBuC5B,WAAYA,EAAY6B,SAlBvD,SAACC,EAAYC,EAASC,EAAQC,GAC7CvC,QAAQC,IAAI,SAAUmC,EAAYC,EAASC,EAAQC,UAyBjDC,EAAiB,SAAAzC,GACrB,IAAQ0C,EAAW1C,EAAX0C,OAER,OADAzC,QAAQC,IAAR,iBAA6BwC,GACtB,oDAAyBA,IAoB5BC,GAAYC,EAAAA,EAAAA,KAChBC,EAAAA,EAAAA,KACE,SAAAC,GAAK,OAAIA,KACT,SAAAC,GAAQ,MAAK,CAAEA,SAAAA,KAFjBF,EAlBc,SAAA7C,GACd,OACE,mBAAC,KAAD,KACE,mBAAC,MAAD,QAAOgD,KAAK,WAAWC,OAAK,EAACC,UAAW,wBAAM,sDAAkClD,IAChF,mBAAC,KAAD,CAAOgD,KAAK,gBAAgBE,UAAW,kBAAM,mBAACnD,GAAD,UAAkBC,EAAlB,CAAyBmD,WAAY,SAClF,mBAAC,KAAD,CACEH,KAAK,sBACLE,UAAW,kBAAM,mBAACT,GAAD,QAAgBC,OAAO,OAAU1C,OAEpD,mBAAC,KAAD,CACEgD,KAAK,uBACLE,UAAW,kBAAM,mBAACT,GAAD,QAAgBC,OAAO,QAAW1C,YAa3D,WAAeoD,EAAAA,EAAAA,IAAgB,CAC7BC,KAAM,UACNC,gBAAgB,EAChBX,UAAAA,EACAY,eAAgB,SAAAvD,GACd,OACE,sCACE,mBAAC,KAAD,CAAQwD,SAASC,EAAAA,EAAAA,sBACf,mBAACd,EAAc3C,MAKvB0D,iBAAkB,SAAAC,GAChB,OAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAC,OAAIA,IAAGF,O,wcCrI/B,IAAAG,gBAAe","sources":["webpack:///./vehicle/vehicle.jsx","webpack:///../node_modules/subapp-react/dist/dev/index.js"],"sourcesContent":["import { React, getBrowserHistory } from \"subapp-react\";\nimport { reduxLoadSubApp } from \"subapp-redux\";\nimport { withRouter } from \"react-router\";\nimport { Router, Route, Switch, Link } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { connect, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Calendar, Layout, message, Modal, Menu, Breadcrumb, Divider } from \"antd\";\nimport Icon from \"@ant-design/icons/lib/components/Icon\";\nconst { Header, Content, Footer, Sider } = Layout;\nimport { MessageOutlined } from \"@ant-design/icons\";\nimport { Table } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2)\n      month = '0' + month;\n  if (day.length < 2)\n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nconst ListVehicles = props => {\n\n  console.log(`search type = ${JSON.stringify(props)}`);\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Time',\n      dataIndex: 'timestamp',\n      key: 'timestamp',\n    },\n    {\n      title: 'VIN',\n      dataIndex: 'vin',\n      key: 'vin',\n    },\n    {\n      title: 'Model Year',\n      dataIndex: 'modelYear',\n      key: 'modelYear',\n    },\n    {\n      title: 'Model',\n      dataIndex: 'model',\n      key: 'model',\n    },\n    {\n      title: 'Brand',\n      dataIndex: 'brand',\n      key: 'brand',\n    }\n  ];\n\n  const onChange = (pagination, filters, sorter, extra) => {\n    console.log(\"params\", pagination, filters, sorter, extra);\n  };\n  const [dataSource,setDataSource] = useState(undefined);\n  useEffect(async () => {\n    const res = await axios.get(\"/api/cars\");\n    setDataSource(res.data.map(item => {\n      const data = item;\n      data.time = formatDate(new Date(data.time));\n      return data;\n    }));\n  },[]);\n  return (\n\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Content style={{ margin: \"0 16px\" }}>\n          <MessageOutlined style={{ fontSize: \"16px\", color: \"#08c\" }} />\n          <div className=\"site-layout-content\">\n          {dataSource && <Table columns={columns} dataSource={dataSource} onChange={onChange} />}\n          </div>\n        </Content>\n      </Layout>\n\n  );\n};\n\nconst SearchVehicles = props => {\n  const { search } = props;\n  console.log(`search type = ${search}`);\n  return <div>Search Vehicles by {search}</div>;\n};\n\nconst Vehicle = props => {\n  return (\n    <Switch>\n      <Route path=\"/vehicle\" exact component={() => <div>Vehicle Home Page</div>} {...props} />\n      <Route path=\"/vehicle/list\" component={() => <ListVehicles {...props} imagesData={[]} />} />\n      <Route\n        path=\"/vehicle/search/vin\"\n        component={() => <SearchVehicles search=\"vin\" {...props} />}\n      />\n      <Route\n        path=\"/vehicle/search/imei\"\n        component={() => <SearchVehicles search=\"imei\" {...props} />}\n      />\n    </Switch>\n  );\n};\n\nconst Component = withRouter(\n  connect(\n    state => state,\n    dispatch => ({ dispatch })\n  )(Vehicle)\n);\n\nexport default reduxLoadSubApp({\n  name: \"Vehicle\",\n  useReactRouter: true,\n  Component,\n  StartComponent: props => {\n    return (\n      <>\n        <Router history={getBrowserHistory()}>\n          <Component {...props} />\n        </Router>\n      </>\n    );\n  },\n  reduxCreateStore: initialState => {\n    return createStore(s => s, initialState);\n  }\n});\n","import FrameworkLib from \"./fe-framework-lib\";\nimport { setupFramework } from \"subapp-web\";\nsetupFramework(FrameworkLib);\nexport * from \"subapp-web\";\nexport { default as React } from \"react\";\nexport { default as AppContext } from \"./app-context\";\nexport { FrameworkLib };\n//# sourceMappingURL=index.js.map"],"names":["Content","Layout","ListVehicles","props","console","log","JSON","stringify","useState","undefined","dataSource","setDataSource","useEffect","axios","data","map","item","date","d","month","day","year","time","Date","getMonth","getDate","getFullYear","length","join","style","minHeight","margin","fontSize","color","className","columns","title","dataIndex","key","onChange","pagination","filters","sorter","extra","SearchVehicles","search","Component","withRouter","connect","state","dispatch","path","exact","component","imagesData","reduxLoadSubApp","name","useReactRouter","StartComponent","history","getBrowserHistory","reduxCreateStore","initialState","createStore","s","setupFramework"],"sourceRoot":""}